/*! js-cookie v2.2.1 | MIT */
!function(e){var t;if("function"==typeof define&&define.amd&&(define(e),t=!0),"object"==typeof exports&&(module.exports=e(),t=!0),!t){var a=window.Cookies,i=window.Cookies=e();i.noConflict=function(){return window.Cookies=a,i}}}((function(){function e(){for(var e=0,t={};e<arguments.length;e++){var a=arguments[e];for(var i in a)t[i]=a[i]}return t}function t(e){return e.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}function a(i){function n(){}function s(t,a,s){if("undefined"!=typeof document){"number"==typeof(s=e({path:"/"},n.defaults,s)).expires&&(s.expires=new Date(1*new Date+864e5*s.expires)),s.expires=s.expires?s.expires.toUTCString():"";try{var d=JSON.stringify(a);/^[\{\[]/.test(d)&&(a=d)}catch(e){}a=i.write?i.write(a,t):encodeURIComponent(a+"").replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),t=encodeURIComponent(t+"").replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var r="";for(var o in s)s[o]&&(r+="; "+o,!0!==s[o]&&(r+="="+s[o].split(";")[0]));return document.cookie=t+"="+a+r}}function d(e,a){if("undefined"!=typeof document){for(var n={},s=document.cookie?document.cookie.split("; "):[],d=0;d<s.length;d++){var r=s[d].split("="),o=r.slice(1).join("=");a||'"'!==o.charAt(0)||(o=o.slice(1,-1));try{var l=t(r[0]);if(o=(i.read||i)(o,l)||t(o),a)try{o=JSON.parse(o)}catch(e){}if(n[l]=o,e===l)break}catch(e){}}return e?n[e]:n}}return n.set=s,n.get=function(e){return d(e,!1)},n.getJSON=function(e){return d(e,!0)},n.remove=function(t,a){s(t,"",e(a,{expires:-1}))},n.defaults={},n.withConverter=a,n}return a((function(){}))})),$((function(){$(document).on("click",'input[type="submit"]',(function(e){e.preventDefault();var t=$(this).parents("form");$(this).attr("data-action")&&$(t).find('input[name="action"]').val($(this).attr("data-action")),$(t).submit()})),$(document).on("change","select#groupAll",(function(e){e.preventDefault(),$("#fieldmapping .groupSelect select").val($(this).val());var t="noimport"==$(this).val()?"noimport":"include";$("#fieldmapping .groupSelectNested select").val(t)})),$(document).on("change",".select-type-matrix select, .select-type-neo select, .select-type-super-table select",(function(e){e.preventDefault();var t=$(this).parents("tr").data("row-id"),a="noimport"==$(this).val()?"noimport":"include";$('tr[data-row-id="'+t+'"].row-blocktype .groupSelectNested select').val(a),$('tr[data-row-id="'+t+'"].row-blocktype-field .groupSelectNested select').val(a)})),$(document).on("change",".select-blocktype select",(function(e){e.preventDefault();var t=$(this).parents("tr").data("row-id"),a=$(this).parents("tr").data("blocktype-id"),i="noimport"==$(this).val()?"noimport":"include";$('tr[data-row-id="'+t+'"][data-blocktype-id="'+a+'"].row-blocktype-field .groupSelectNested select').val(i)})),$(document).on("click","#newgroupbtn",(function(e){var t=prompt(Craft.t("field-manager","What do you want to name your group?"),"");if(t){var a={name:t};Craft.sendActionRequest("POST","fields/save-group",{data:a}).then((e=>{$("#fieldmapping select#groupAll").append($('<option value="'+e.data.group.id+'">'+e.data.group.name+"</option>")).val(e.data.group.id),$("#fieldmapping .groupSelect select").append($('<option value="'+e.data.group.id+'">'+e.data.group.name+"</option>")).val(e.data.group.id)})).catch((({response:e})=>{e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()}))}})),$(document).on("change","tr.group .field .checkbox",(function(e){e.preventDefault();var t=$(this).parents("tr.group").data("groupid"),a=$('tr.field[data-groupid="'+t+'"] .field .checkbox');$(this).hasClass("hasChecked")?($(this).removeClass("hasChecked"),a.prop("checked",!1)):($(this).addClass("hasChecked"),a.prop("checked",!0))})),$(document).on("change","#fieldmanager .checkbox",(function(e){e.preventDefault(),$("#fieldmanager .checkbox:checked").length>0?$(".export-btn").removeClass("disabled").prop("disabled",!1):$(".export-btn").addClass("disabled").prop("disabled",!0)})),$(".sidebar-nav a").on("click",(function(e){e.preventDefault();var t=$(this).attr("data-groupid");$(".sidebar-nav li").removeClass("active"),$(this).parent().addClass("active"),$("#fieldmanager tbody tr").hide(),$(".fieldmanager-audit-content").hide(),Cookies.set("fieldManager-groupId",t),$(".new-field-btn").data("groupid",t),"all"==t?($("#fieldmanager tbody tr[data-groupid]").show(),$(".fieldmanager-audit-content[data-groupid]").show()):($('#fieldmanager tbody tr[data-groupid="'+t+'"]').show(),$('.fieldmanager-audit-content[data-groupid="'+t+'"]').show())}));var e=Cookies.get("fieldManager-groupId");e&&$('.sidebar-nav a[data-groupid="'+e+'"]').trigger("click"),$("tr.group .clone-btn").on("click",(function(e){new Craft.FieldManager.CloneGroup($(this),$(this).parents("tr.group"))})),$("tr.field .clone-btn").on("click",(function(e){new Craft.FieldManager.CloneField($(this),$(this).parents("tr.field"))})),$("tr.group .go a").on("click",(function(e){e.metaKey||(e.preventDefault(),new Craft.FieldManager.EditGroup($(this),$(this).parents("tr.group")))})),$("tr.field .go a").on("click",(function(e){e.metaKey||(e.preventDefault(),new Craft.FieldManager.EditField($(this),$(this).parents("tr.field")))})),$(".new-field-btn").on("click",(function(e){e.metaKey||(e.preventDefault(),new Craft.FieldManager.EditField($(this),$(this)))})),$(".delete-group").on("click",(function(e){if($selectedGroup=$(this).parents("tr.group"),confirm(Craft.t("field-manager","Are you sure you want to delete this group and all its fields?"))){var t={id:$selectedGroup.data("groupid")};Craft.sendActionRequest("POST","fields/delete-group",{data:t}).then((e=>{location.href=Craft.getUrl("field-manager")})).catch((({response:e})=>{e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()}))}}))})),void 0===Craft.FieldManager&&(Craft.FieldManager={}),$((function(){Craft.FieldManager.HandleGeneratorWithSuffix=Craft.BaseInputGenerator.extend({generateTargetValue:function(e){var t=e.replace("/<(.*?)>/g","");t=(t=t.replace(/['"‘’“”\[\]\(\)\{\}:]/g,"")).toLowerCase(),t=(t=Craft.asciiString(t)).replace(/^[^a-z]+/,"");var a=Craft.filterArray(t.split(/[^a-z0-9]+/));t="";for(var i=0;i<a.length;i++)t+=0===i?a[i]:a[i].charAt(0).toUpperCase()+a[i].substr(1);return t+"_"}});var e={setValue:function(t,a,i){if(t.length){var n=t.shift();return n?(i[n]=e.setValue(t,a,i[n]||{}),i):i.push?(i.push(a),i):[a]}return a}};$.fn.serializeObject=function(){var t={},a=this.serializeArray(),i=null;return $.each(a,(function(){i=this.name.replace(/\]/g,"").split(/\[/),e.setValue(i,this.value,t)})),t}})),void 0===Craft.FieldManager&&(Craft.FieldManager={}),$((function(){Craft.FieldManager.CloneGroup=Garnish.Base.extend({$element:null,groupId:null,$form:null,$spinner:null,hud:null,init:function(e,t){this.$element=e,this.groupId=t.data("groupid"),this.$element.addClass("loading");var a={groupId:this.groupId,clone:!0};Craft.sendActionRequest("POST","field-manager/base/get-group-modal-body",{data:a}).then((e=>{this.showHud(e)}))},showHud:function(e){this.$element.removeClass("loading");var t=$();this.$form=$("<div/>"),$('<input type="hidden" name="groupId" value="'+this.groupId+'">').appendTo(this.$form),$fieldsContainer=$('<div class="fields"/>').appendTo(this.$form),$fieldsContainer.html(e.data.html),Craft.initUiElements($fieldsContainer);var a=$('<div class="hud-footer"/>').appendTo(this.$form),i=$('<div class="buttons right"/>').appendTo(a);this.$cancelBtn=$('<div class="btn">'+Craft.t("field-manager","Cancel")+"</div>").appendTo(i),this.$saveBtn=$('<input class="btn submit" type="submit" value="'+Craft.t("field-manager","Clone")+'"/>').appendTo(i),this.$spinner=$('<div class="spinner hidden"/>').appendTo(i),t=t.add(this.$form),this.hud=new Garnish.HUD(this.$element,t,{bodyClass:"body",closeOtherHUDs:!1}),this.hud.on("hide",$.proxy((function(){delete this.hud}),this)),this.addListener(this.$saveBtn,"activate","saveGroupField"),this.addListener(this.$cancelBtn,"activate","closeHud"),new Craft.FieldManager.HandleGeneratorWithSuffix("#name","#prefix")},saveGroupField:function(e){e.preventDefault(),this.$spinner.removeClass("hidden");var t=this.hud.$body.serialize();Craft.sendActionRequest("POST","field-manager/base/clone-group",{data:t}).then((e=>{Craft.cp.displayNotice(Craft.t("field-manager","Group cloned.")),location.href=Craft.getUrl("field-manager"),this.onFadeOut()})).catch((({response:e})=>{Garnish.shake(this.hud.$hud),e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()})).finally((()=>{this.$spinner.addClass("hidden")}))},closeHud:function(){this.hud.hide(),delete this.hud}}),Craft.FieldManager.EditGroup=Garnish.Base.extend({$element:null,groupId:null,$form:null,$spinner:null,hud:null,init:function(e,t){this.$element=e,this.groupId=t.data("groupid"),this.$element.addClass("loading");var a={groupId:this.groupId};Craft.sendActionRequest("POST","field-manager/base/get-group-modal-body",{data:a}).then((e=>{this.showHud(e)}))},showHud:function(e){this.$element.removeClass("loading");var t=$();this.$form=$("<div/>"),$('<input type="hidden" name="groupId" value="'+this.groupId+'">').appendTo(this.$form),$fieldsContainer=$('<div class="fields"/>').appendTo(this.$form),$fieldsContainer.html(e.data.html),Craft.initUiElements($fieldsContainer);var a=$('<div class="hud-footer"/>').appendTo(this.$form),i=$('<div class="buttons right"/>').appendTo(a);this.$cancelBtn=$('<div class="btn">'+Craft.t("field-manager","Cancel")+"</div>").appendTo(i),this.$saveBtn=$('<input class="btn submit" type="submit" value="'+Craft.t("field-manager","Save")+'"/>').appendTo(i),this.$spinner=$('<div class="spinner hidden"/>').appendTo(i),t=t.add(this.$form),this.hud=new Garnish.HUD(this.$element,t,{bodyClass:"body",closeOtherHUDs:!1}),this.hud.on("hide",$.proxy((function(){delete this.hud}),this)),this.addListener(this.$saveBtn,"activate","saveGroupField"),this.addListener(this.$cancelBtn,"activate","closeHud")},saveGroupField:function(e){e.preventDefault(),this.$spinner.removeClass("hidden");var t=this.hud.$body.serialize();Craft.sendActionRequest("POST","fields/save-group",{data:t}).then((e=>{location.href=Craft.getUrl("field-manager"),Craft.cp.displayNotice(Craft.t("field-manager","Field group updated.")),this.closeHud()})).catch((({response:e})=>{Garnish.shake(this.hud.$hud),e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()})).finally((()=>{this.$spinner.addClass("hidden")}))},closeHud:function(){this.hud.hide(),delete this.hud}}),Craft.FieldManager.CloneField=Garnish.Modal.extend({fieldId:null,groupId:null,$body:null,$element:null,$buttons:null,$cancelBtn:null,$saveBtn:null,$footerSpinner:null,init:function(e,t){this.$element=e,this.fieldId=t.data("id"),this.groupId=t.data("groupid");var a=$('<div class="modal fieldsettingsmodal"></div>').appendTo(Garnish.$bod),i=$('<div class="body"><div class="spinner big"></div></div>').appendTo(a),n=$('<div class="footer"/>').appendTo(a);this.base(a,this.settings),this.$footerSpinner=$('<div class="spinner hidden"/>').appendTo(n),this.$buttons=$('<div class="buttons rightalign first"/>').appendTo(n),this.$cancelBtn=$('<div class="btn">'+Craft.t("field-manager","Cancel")+"</div>").appendTo(this.$buttons),this.fieldId?this.$saveBtn=$('<div class="btn submit">'+Craft.t("field-manager","Clone")+"</div>").appendTo(this.$buttons):this.$saveBtn=$('<div class="btn submit">'+Craft.t("field-manager","Add field")+"</div>").appendTo(this.$buttons),this.$body=i,this.addListener(this.$cancelBtn,"activate","onFadeOut"),this.addListener(this.$saveBtn,"activate","saveSettings")},onFadeIn:function(){var e={fieldId:this.fieldId,groupId:this.groupId};Craft.sendActionRequest("POST","field-manager/base/get-field-modal-body",{data:e}).then((e=>{this.$body.html(e.data.html),Craft.appendHeadHtml(e.data.headHtml),Craft.appendBodyHtml(e.data.footHtml),Craft.initUiElements(this.$body),new Craft.HandleGenerator("#name","#handle")})),this.base()},onFadeOut:function(){this.hide(),this.destroy(),this.$shade.remove(),this.$container.remove(),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},saveSettings:function(){var e=this.$body.find("form").serializeObject();e.fieldId=this.fieldId,this.$footerSpinner.removeClass("hidden"),Craft.sendActionRequest("POST","field-manager/base/clone-field",{data:e}).then((e=>{Craft.cp.displayNotice(Craft.t("field-manager","Field cloned.")),location.href=Craft.getUrl("field-manager"),this.onFadeOut()})).catch((({response:e})=>{e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()})).finally((()=>{this.$footerSpinner.addClass("hidden")})),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},show:function(){this.base()}}),Craft.FieldManager.EditField=Garnish.Modal.extend({fieldId:null,groupId:null,$body:null,$form:null,$element:null,$buttons:null,$cancelBtn:null,$saveBtn:null,$footerSpinner:null,init:function(e,t){this.$element=e,t&&(this.fieldId=t.data("id"),this.groupId=t.data("groupid"));var a=$('<div class="modal fieldsettingsmodal"></div>').appendTo(Garnish.$bod),i=$('<div class="body"><div class="spinner big"></div></div>').appendTo(a),n=$('<div class="footer"/>').appendTo(a);this.base(a,this.settings),this.$footerSpinner=$('<div class="spinner hidden"/>').appendTo(n),this.$buttons=$('<div class="buttons rightalign first"/>').appendTo(n),this.$cancelBtn=$('<div class="btn">'+Craft.t("field-manager","Cancel")+"</div>").appendTo(this.$buttons),this.$saveBtn=$('<div class="btn submit">'+Craft.t("field-manager","Save")+"</div>").appendTo(this.$buttons),this.$body=i,this.addListener(this.$cancelBtn,"activate","onFadeOut"),this.addListener(this.$saveBtn,"activate","saveSettings")},onFormSubmit:function(e){e.preventDefault()},onFadeIn:function(){var e={fieldId:this.fieldId,groupId:this.groupId};Craft.sendActionRequest("POST","field-manager/base/get-field-modal-body",{data:e}).then((e=>{this.$body.html(e.data.html),Craft.appendHeadHtml(e.data.headHtml),Craft.appendBodyHtml(e.data.footHtml),Craft.initUiElements(this.$body),this.$form=this.$body.find("form"),this.addListener(this.$form,"submit","onFormSubmit")})),this.base()},onFadeOut:function(){this.hide(),this.destroy(),this.$shade.remove(),this.$container.remove(),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},saveSettings:function(){this.$form.trigger("submit"),this.$footerSpinner.removeClass("hidden");var e=this.$form.serialize();Craft.sendActionRequest("POST","field-manager/base/save-field",{data:e}).then((e=>{Craft.cp.displayNotice(Craft.t("field-manager","Field updated.")),location.href=Craft.getUrl("field-manager"),this.onFadeOut()})).catch((({response:e})=>{Garnish.shake(this.$container),e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()})),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},show:function(){this.base()}})}));
//# sourceMappingURL=field-manager.js.map